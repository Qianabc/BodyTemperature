apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion '23.0.2'

    defaultConfig {
        applicationId "com.prouast.heartbeat"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    // add a task that calls regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
//        Properties properties = new Properties()
////        properties.load(project.rootProject.file('local.properties').newDataInputStream())
////        def ndkDir = properties.getProperty('ndk.dir')
        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
            commandLine "D:\\softwares\\android-ndk-r10e\\ndk-build.cmd", '-C', file('src/main/jni').absolutePath,
                    'NDK_LIBS_OUT=../jniLibs',
                    '-j', Runtime.runtime.availableProcessors(),
                    'all',
                    'NDK_DEBUG=1'
        } else {
            commandLine "D:\\softwares\\android-ndk-r10e\\ndk-build.cmd", '-C', file('src/main/jni').absolutePath,
                    'NDK_LIBS_OUT=../jniLibs',
                    '-j', Runtime.runtime.availableProcessors(),
                    'all',
                    'NDK_DEBUG=1'
        }
//        def ndkDir = android.ndkDirectory
//        commandLine "D:\\softwares\\android-ndk-r10e\\ndk-build.cmd",
//                '-C', file('src/main/jni').absolutePath, // relative path to jni source
//                'NDK_LIBS_OUT=../jniLibs',
//                '-j', Runtime.runtime.availableProcessors(),
//                'all',
//                'NDK_DEBUG=1'
    }

    task ndkClean(type: Exec, description: 'Clean JNI object files') {
//        Properties properties = new Properties()
//        properties.load(project.rootProject.file('local.properties').newDataInputStream())
//        def ndkDir = properties.getProperty('ndk.dir')
        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
            commandLine "D:\\softwares\\android-ndk-r10e\\ndk-build.cmd", 'clean', '-C', file('src/main/jni').absolutePath,
                    'NDK_LIBS_OUT=../jniLibs',
                    'clean'
        } else {
            commandLine "D:\\softwares\\android-ndk-r10e\\ndk-build.cmd", 'clean', '-C', file('src/main/jni').absolutePath,
                    'NDK_LIBS_OUT=../jniLibs',
                    'clean'
        }
    }

    // add this task as a dependency of Java compilation
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(['ndkBuild'])
    }

    clean.dependsOn(['ndkClean'])

    sourceSets.main {
        jni.srcDirs = []
        //jniLibs.srcDir 'src/main/libs'
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'com.android.support:appcompat-v7:28.0.0'
    compile project(':libraries:opencv')
//    compile 'com.android.support:design:28.0.0'
}